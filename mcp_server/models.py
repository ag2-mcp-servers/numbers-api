# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T07:36:34+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field, RootModel, constr


class AccountUnauthorized(BaseModel):
    error_code: Optional[str] = Field(
        None,
        alias='error-code',
        description='The status code of the response. `200` indicates a successful request.',
        examples=['401'],
    )
    error_code_label: Optional[str] = Field(
        None,
        alias='error-code-label',
        description='The status code description',
        examples=['authentication failed'],
    )


class Country(RootModel[constr(min_length=2, max_length=2)]):
    root: constr(min_length=2, max_length=2) = Field(
        ...,
        description='The two character country code in ISO 3166-1 alpha-2 format',
        examples=['GB'],
    )


class NumberDetails(BaseModel):
    country: Country
    msisdn: str = Field(
        ...,
        description='An available inbound virtual number.',
        examples=['447700900000'],
    )
    target_api_key: Optional[str] = Field(
        None,
        description='If you’d like to perform an action on a subaccount, provide the `api_key` of that account here. If you’d like to perform an action on your own account, you do not need to provide this field.',
        examples=['1a2345b7'],
    )


class MessagesCallbackType(Enum):
    app = 'app'


class VoiceCallbackType(Enum):
    sip = 'sip'
    tel = 'tel'
    app = 'app'


class NumberDetailsUpdate(BaseModel):
    app_id: Optional[str] = Field(
        None,
        description='The Application that will handle inbound traffic to this number.',
        examples=['aaaaaaaa-bbbb-cccc-dddd-0123456789abc'],
    )
    country: Country
    messagesCallbackType: Optional[MessagesCallbackType] = Field(
        None,
        description='<strong>DEPRECATED</strong> - We recommend that you use `app_id` instead.\n\nSpecifies the Messages webhook type (always `app`) associated with this\nnumber and must be used with the `messagesCallbackValue` parameter.\n',
        examples=['app'],
    )
    messagesCallbackValue: Optional[str] = Field(
        None,
        description='<strong>DEPRECATED</strong> - We recommend that you use `app_id` instead.\n\nSpecifies the Application ID of your Messages application.\nIt must be used with the `messagesCallbackType` parameter.\n',
        examples=['aaaaaaaa-bbbb-cccc-dddd-0123456789ab'],
    )
    moHttpUrl: Optional[str] = Field(
        None,
        description="An URL-encoded URI to the webhook endpoint that handles inbound messages. Your webhook endpoint must be active before you make this request. Vonage makes a `GET` request to the endpoint and checks that it returns a `200 OK` response. Set this parameter's value to an empty string to remove the webhook.",
        examples=['https://example.com/webhooks/inbound-sms'],
    )
    moSmppSysType: Optional[str] = Field(
        None,
        description='The associated system type for your SMPP client',
        examples=['inbound'],
    )
    msisdn: str = Field(
        ...,
        description='An available inbound virtual number.',
        examples=['447700900000'],
    )
    voiceCallbackType: Optional[VoiceCallbackType] = Field(
        None,
        description='Specify whether inbound voice calls on your number are forwarded\nto a SIP or a telephone number.  This must be used with the\n`voiceCallbackValue` parameter. If set, `sip` or `tel` are\nprioritized over the Voice capability in your Application.\n\n*Note: The `app` value is deprecated and will be removed in future.*\n',
        examples=['tel'],
    )
    voiceCallbackValue: Optional[str] = Field(
        None,
        description='A SIP URI or telephone number. Must be used with the `voiceCallbackType` parameter.',
        examples=['447700900000'],
    )
    voiceStatusCallback: Optional[str] = Field(
        None,
        description='A webhook URI for Vonage to send a request to when a call ends',
        examples=['https://example.com/webhooks/status'],
    )


class Ownednumber(BaseModel):
    country: Optional[Country] = None
    features: Optional[List[str]] = Field(
        None,
        description='The capabilities of the number: `SMS` or `VOICE` or `SMS,VOICE` or `SMS,MMS` or `VOICE,MMS` or `SMS,MMS,VOICE`',
        examples=[['VOICE', 'SMS', 'MMS']],
    )
    messagesCallbackType: Optional[str] = Field(
        None, description='The messages webhook type: always `app`', examples=['app']
    )
    messagesCallbackValue: Optional[str] = Field(
        None,
        description='An Application ID',
        examples=['aaaaaaaa-bbbb-cccc-dddd-0123456789ab'],
    )
    moHttpUrl: Optional[str] = Field(
        None,
        description='The URL of the webhook endpoint that handles inbound messages',
        examples=['https://example.com/webhooks/inbound-sms'],
    )
    msisdn: Optional[str] = Field(
        None,
        description='An available inbound virtual number.',
        examples=['447700900000'],
    )
    type: Optional[str] = Field(
        None,
        description='The type of number: `landline`, `landline-toll-free` or `mobile-lvn`',
        examples=['mobile-lvn'],
    )
    voiceCallbackType: Optional[str] = Field(
        None,
        description='The voice webhook type: `sip`, `tel`, or `app`',
        examples=['app'],
    )
    voiceCallbackValue: Optional[str] = Field(
        None,
        description='A SIP URI, telephone number or Application ID',
        examples=['aaaaaaaa-bbbb-cccc-dddd-0123456789ab'],
    )


class Response(BaseModel):
    error_code: Optional[str] = Field(
        None,
        alias='error-code',
        description='The status code of the response. `200` indicates a successful request.',
        examples=['200'],
    )
    error_code_label: Optional[str] = Field(
        None,
        alias='error-code-label',
        description='The status code description',
        examples=['success'],
    )


class Response420(BaseModel):
    error_code: Optional[str] = Field(
        None,
        alias='error-code',
        description='The status code of the response. `200` indicates a successful request.',
        examples=['420'],
    )
    error_code_label: Optional[str] = Field(
        None,
        alias='error-code-label',
        description='More detail about what happened. For example you may need to request the number via the dashboard, or you may already own this number.',
        examples=[
            'Numbers from this country can be requested from the Dashboard (https://dashboard.nexmo.com/buy-numbers) as they require a valid local address to be provided before being purchased.'
        ],
    )


class Unauthorized(BaseModel):
    error_code: Optional[str] = Field(
        None,
        alias='error-code',
        description='The status code of the response. `200` indicates a successful request.',
        examples=['401'],
    )
    error_code_label: Optional[str] = Field(
        None,
        alias='error-code-label',
        description='The status code description',
        examples=['authentication failed'],
    )


class SearchPattern(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2


class Type(Enum):
    landline = 'landline'
    mobile_lvn = 'mobile-lvn'
    landline_toll_free = 'landline-toll-free'


class Features(Enum):
    SMS = 'SMS'
    VOICE = 'VOICE'
    SMS_VOICE = 'SMS,VOICE'
    MMS = 'MMS'
    SMS_MMS = 'SMS,MMS'
    VOICE_MMS = 'VOICE,MMS'
    SMS_MMS_VOICE = 'SMS,MMS,VOICE'


class Availablenumber(BaseModel):
    cost: Optional[str] = Field(
        None,
        description='The monthly rental cost for this number, in Euros',
        examples=['1.25'],
    )
    country: Optional[Country] = None
    features: Optional[List[str]] = Field(
        None,
        description='The capabilities of the number: `SMS` or `VOICE` or `SMS,VOICE` or `SMS,MMS` or `VOICE,MMS` or `SMS,MMS,VOICE`',
        examples=[['VOICE', 'SMS', 'MMS']],
    )
    msisdn: Optional[str] = Field(
        None,
        description='An available inbound virtual number.',
        examples=['447700900000'],
    )
    type: Optional[str] = Field(
        None,
        description='The type of number: `landline`, `landline-toll-free` or `mobile-lvn`',
        examples=['mobile-lvn'],
    )


class InboundNumbers(BaseModel):
    count: Optional[int] = Field(
        None,
        description='The total amount of numbers owned by the account',
        examples=[1],
    )
    numbers: Optional[List[Ownednumber]] = Field(
        None, description='A paginated array of numbers and their details'
    )


class AvailableNumbers(BaseModel):
    count: Optional[int] = Field(
        None,
        description='The total amount of numbers available in the pool.',
        examples=[1234],
    )
    numbers: Optional[List[Availablenumber]] = Field(
        None, description='A paginated array of available numbers and their details.'
    )
